scalar DateTime

"Posts"
type Post {
  id: ID!
  content: String!
  createdAt: DateTime!
  username: String!
  likesCount: Int!
  commentsCount: Int!
  # comments: [Comment!]!
}

input CreatePostInput {
  content: String!
}

type CreatePostResponse {
  code: Int!
  success: Boolean!
  message: String!
  post: Post
}

type DeletePostResponse {
  code: Int!
  success: Boolean!
  message: String!
  postId: Int
}

"Likes"
type LikePostResponse {
  code: Int!
  success: Boolean!
  message: String!
  post: Post
}

"Comments"
type Comment {
  id: ID!
  content: String!
  createdAt: DateTime!
  username: String!
}

input CreateCommentInput {
  postId: Int!
  content: String!
}

type CreateCommentResponse {
  code: Int!
  success: Boolean!
  message: String!
  comment: Comment
}

type DeleteCommentResponse {
  code: Int!
  success: Boolean!
  message: String!
  commentId: Int
}

"Queries"
type Query {
  "Posts"
  posts: [Post!]!
  "Comments"
  comments(postId: Int!): [Comment!]!
}

"Mutations"
type Mutation {
  "Posts"
  createPost(input: CreatePostInput!): CreatePostResponse!
  deletePost(postId: Int!): DeletePostResponse!
  "Likes"
  likePost(postId: Int!): LikePostResponse!
  unlikePost(postId: Int!): LikePostResponse!
  "Comments"
  createComment(input: CreateCommentInput!): CreateCommentResponse!
  deleteComment(commentId: Int!): DeleteCommentResponse!
}